Lab3
Програмний додаток: Miro

Вимога, пов'язана з Unit Testing (Модульне тестування):
Вимога: Кожен окремий модуль Miro повинен правильно виконувати свої функції незалежно від інших модулів.
Тестування: Для перевірки цієї вимоги можна виконати такі кроки:
•	Розробити тестові випадки для кожного модуля окремо.
•	Запустити тести для кожного модуля, перевіряючи, чи виконує він свої функції належним чином.
•	Виправити всі виявлені помилки і знову запустити тести.

Вимога, пов'язана з Component Testing (Компонентне тестування):
Вимога: Всі компоненти Miro повинні коректно взаємодіяти між собою.
Тестування: Для перевірки цієї вимоги можна виконати такі кроки:
•	Виділити окремі компоненти для тестування.
•	Розробити тестові сценарії для взаємодії між компонентами.
•	Запустити тести і переконатися, що всі компоненти правильно працюють разом.

Вимога, пов'язана з Smoke Testing (Попереднє тестування):
Вимога: Miro має бути доступним для запуску та базового використання без серйозних помилок або проблем.
Тестування: Для виконання попереднього тестування можна виконати такі кроки:
•	Запустити додаток Miro або веб-версію.
•	Спробувати створити нову дошку і додати кілька елементів.
•	Перевірити, що Miro функціонує без помилок та затримок при базовому використанні.

Вимога, пов'язана з Integration Testing (Інтеграційне тестування):
Вимога: Всі модулі Miro повинні коректно працювати разом як єдина система.
Тестування: Для перевірки цієї вимоги можна виконати такі кроки:
•	Розробити тестові сценарії для перевірки інтеграції між модулями.
•	Запустити інтеграційні тести.
•	Переконатися, що всі модулі працюють разом без проблем.

Вимога, пов'язана з Regression Testing (Регресійне тестування):
Вимога: Нові зміни в коді Miro не повинні порушувати існуючий функціонал.
Тестування: Для перевірки цієї вимоги можна виконати такі кроки:
•	Запустити повний набір автоматизованих тестів після внесення змін.
•	Переконатися, що всі раніше працюючі функції все ще працюють правильно.
•	Виправити будь-які виявлені помилки і повторити тестування.

Вимога, пов'язана з Sanity Testing (Перевірка адекватності):
Вимога: Основний функціонал Miro повинен працювати правильно після внесення невеликих змін або виправлення помилок.
Тестування: Для перевірки цієї вимоги можна виконати такі кроки:
•	Перевірити критичні функції, такі як створення і редагування дошок.
•	Переконатися, що базові функції працюють належним чином.
•	Запустити додаткові тести для перевірки виправлених помилок.

Вимога, пов'язана з System Testing (Системне тестування):
Вимога: Вся система Miro повинна працювати як єдине ціле, забезпечуючи виконання всіх функціональних вимог.
Тестування: Для перевірки цієї вимоги можна виконати такі кроки:
•	Розробити повний набір тестових сценаріїв для всієї системи.
•	Запустити системні тести і переконатися, що всі функції працюють правильно.
•	Виправити всі виявлені помилки і знову запустити системні тести.

Вимога, пов'язана з User Acceptance Testing (Користувацьке приймальне тестування):
Вимога: Кінцеві користувачі повинні бути задоволені роботою Miro і його функціоналом.
Тестування: Для перевірки цієї вимоги можна виконати такі кроки:
•	Залучити групу кінцевих користувачів до тестування.
•	Зібрати їхні відгуки про роботу додатку.
•	Перевірити, чи відповідає Miro їхнім очікуванням і вимогам.

Вимога, пов'язана з API Testing (Тестування API):
Вимога: Всі API Miro повинні коректно обробляти запити і повертати правильні відповіді.
Тестування: Для перевірки цієї вимоги можна виконати такі кроки:
•	Розробити тестові випадки для кожного API.
•	Запустити тести і перевірити, чи повертаються правильні відповіді на запити.
•	Переконатися, що API обробляє помилки належним чином.

Вимога, пов'язана з UI Testing (Тестування користувацького інтерфейсу):
Вимога: Інтерфейс Miro повинен бути зручним і інтуїтивно зрозумілим для користувачів.
Тестування: Для перевірки цієї вимоги можна виконати наступні кроки:
•	Перевірити роботу всіх інтерфейсних елементів (кнопки, панелі, вікна налаштувань).
•	Тестування навігації по сайту, забезпечуючи, що користувачі можуть легко знаходити та використовувати необхідні функції.

Вимога, пов'язана з White-Box Testing (Тестування на рівні коду):
Вимога: Всі внутрішні механізми Miro повинні працювати коректно і без помилок.
Тестування: Для перевірки цієї вимоги можна виконати такі кроки:
•	Переглянути і проаналізувати код додатку.
•	Розробити тестові випадки для перевірки внутрішніх механізмів.
•	Запустити тести і виправити виявлені помилки.

Вимога, пов'язана з Black-Box Testing (Тестування на рівні функцій):
Вимога: Всі функції Miro повинні працювати коректно, незалежно від внутрішньої реалізації.
Тестування: Для перевірки цієї вимоги можна виконати такі кроки:
•	Розробити тестові випадки для перевірки функцій без знання внутрішньої реалізації.
•	Запустити тести і перевірити, чи всі функції працюють належним чином.
•	Виправити всі виявлені помилки.

Вимога, пов'язана з Production Testing (Тестування у виробничому середовищі):
Вимога: Miro повинен правильно функціонувати у реальних умовах використання.
Тестування: Для перевірки цієї вимоги можна виконати такі кроки:
•	Запустити тестове використання додатку у виробничому середовищі.
•	Перевірити, як додаток працює під реальним навантаженням.
•	Зібрати відгуки користувачів і виправити всі виявлені помилки.

Вимога, пов'язана з Alpha Testing (Альфа-тестування):
Вимога: Початкова версія Miro повинна пройти перевірку розробниками та внутрішніми тестувальниками.
Тестування: Для перевірки цієї вимоги можна виконати такі кроки:
•	Запустити альфа-версію додатку.
•	Залучити внутрішніх тестувальників до перевірки всіх функцій.
•	Зібрати відгуки і виправити виявлені помилки.

Вимога, пов'язана з Beta Testing (Бета-тестування):
Вимога: Бета-версія Miro повинна пройти перевірку обмеженою групою зовнішніх користувачів.
Тестування: Для перевірки цієї вимоги можна виконати такі кроки:
•	Запустити бета-версію додатку для обмеженої групи користувачів.
•	Зібрати їхні відгуки і виявити можливі проблеми.
•	Виправити всі виявлені помилки перед остаточним релізом.